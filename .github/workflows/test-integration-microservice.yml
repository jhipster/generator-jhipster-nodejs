name: Test Integration Microservice
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
permissions:
  contents: read
env:
  NODE_OPTIONS: --dns-result-order=ipv4first
  FORCE_COLOR: 2
jobs:
  applications:
    name: ${{ matrix.app-type }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    timeout-minutes: 40
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    strategy:
      fail-fast: false
      matrix:
        node-version: [20]
        os: [ubuntu-latest]
        app-type:
          - microservice-oauth2-jdl
        include:
          - app-type: microservice-oauth2-jdl
            app-folder: microservice-oauth2-jdl
            entity: post-import-jdl
            e2e: 'no'
    steps:
      - uses: actions/checkout@v4
        with:
          path: generator-jhipster-nodejs
          fetch-depth: 2
      - uses: jhipster/actions/setup-runner@v0
        with:
          node-version: ${{ matrix.node-version }}
          binary-dir: ${{ github.workspace }}/generator-jhipster-nodejs/cli/
      - run: npm install
        working-directory: ${{ github.workspace }}/generator-jhipster-nodejs
      - run: cli.cjs generate-sample ${{ matrix.app-folder }} --template-name ${{ matrix.app-type }} --skip-jhipster-dependencies --skip-install
      - uses: jhipster/actions/compare-sample@v0
        id: compare
        if: >-
          github.event.pull_request &&
          !contains(github.event.pull_request.labels.*.name, 'pr: disable-compare')
        with:
          generator-path: generator-jhipster-nodejs
          cmd: cli.cjs generate-sample ${{ matrix.app-folder }} --template-name ${{ matrix.app-type }} --skip-jhipster-dependencies --skip-install
      - name: 'INSTALL DEPENDENCIES of generated app'
        run: npm install
        if: steps.compare.outputs.equals != 'true'
      - name: 'RUN UNIT TESTS of generated app'
        run: npm test --workspaces
        if: steps.compare.outputs.equals != 'true'
      - name: 'RUN SERVER E2E TESTS of generated app'
        run: npm run test:server:e2e
        if: steps.compare.outputs.equals != 'true'
  check-microservice-applications:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [applications]
    if: always()
    steps:
      - run: |
          echo '${{ toJSON(needs) }}'
          if [ 'skipped' == '${{ needs.applications.result }}' ] || [ 'success' == '${{ needs.applications.result }}' ] || [ 'closed' == '${{ github.event.action }}' ]; then
            exit 0
          fi
          exit 1
