import { <%= asEntity(entityClass) %> } from '../../domain/<%= entityFileName %>.entity';
import { <%= asDto(entityClass) %> } from '../dto/<%= entityFileName %>.dto';


/**
 * A <%= entityClass %> mapper object.
 */
export class <%= entityClass %>Mapper {

  static fromDTOtoEntity (entityDTO: <%= asDto(entityClass) %>): <%= asEntity(entityClass) %> {
    if (!entityDTO) {
      return;
    }
    const entity = new <%= asEntity(entityClass) %>();
    const fields = Object.getOwnPropertyNames(entityDTO);
    fields.forEach(field => {
        entity[field] = entityDTO[field];
    });
    return entity;

  }

  static fromEntityToDTO (entity: <%= asEntity(entityClass) %>): <%= asDto(entityClass) %> {
    if (!entity) {
      return;
    }
    const entityDTO = new <%= asDto(entityClass) %>();

    const fields = Object.getOwnPropertyNames(entity);

    fields.forEach(field => {
        entityDTO[field] = entity[field];
    });

    return entityDTO;
  }
}
